// Generated by view binder compiler. Do not edit!
package com.application.easycook.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.application.easycook.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPantryBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FloatingActionButton addProductButton;

  @NonNull
  public final AppBarLayout appbar;

  @NonNull
  public final LinearLayout linarRC;

  @NonNull
  public final RecyclerView recycleView1;

  @NonNull
  public final Toolbar toolbar;

  private FragmentPantryBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FloatingActionButton addProductButton, @NonNull AppBarLayout appbar,
      @NonNull LinearLayout linarRC, @NonNull RecyclerView recycleView1, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.addProductButton = addProductButton;
    this.appbar = appbar;
    this.linarRC = linarRC;
    this.recycleView1 = recycleView1;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPantryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPantryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pantry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPantryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_product_button;
      FloatingActionButton addProductButton = ViewBindings.findChildViewById(rootView, id);
      if (addProductButton == null) {
        break missingId;
      }

      id = R.id.appbar;
      AppBarLayout appbar = ViewBindings.findChildViewById(rootView, id);
      if (appbar == null) {
        break missingId;
      }

      id = R.id.linarRC;
      LinearLayout linarRC = ViewBindings.findChildViewById(rootView, id);
      if (linarRC == null) {
        break missingId;
      }

      id = R.id.recycleView1;
      RecyclerView recycleView1 = ViewBindings.findChildViewById(rootView, id);
      if (recycleView1 == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentPantryBinding((CoordinatorLayout) rootView, addProductButton, appbar,
          linarRC, recycleView1, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
